[{"/Users/matthewputra/GO/src/SendIt/client/src/index.js":"1","/Users/matthewputra/GO/src/SendIt/client/src/App.js":"2","/Users/matthewputra/GO/src/SendIt/client/src/reportWebVitals.js":"3","/Users/matthewputra/GO/src/SendIt/client/src/constants/statusCode.js":"4","/Users/matthewputra/GO/src/SendIt/client/src/constants/apiEndPoints.js":"5","/Users/matthewputra/GO/src/SendIt/client/src/Auth/Auth.js":"6","/Users/matthewputra/GO/src/SendIt/client/src/constants/userType.js":"7","/Users/matthewputra/GO/src/SendIt/client/src/Main/Main.js":"8"},{"size":500,"mtime":1607526418950,"results":"9","hashOfConfig":"10"},{"size":2055,"mtime":1608022518154,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607526418950,"results":"12","hashOfConfig":"10"},{"size":132,"mtime":1607887709366,"results":"13","hashOfConfig":"10"},{"size":414,"mtime":1607973665186,"results":"14","hashOfConfig":"10"},{"size":5447,"mtime":1607973665185,"results":"15","hashOfConfig":"10"},{"size":65,"mtime":1607957741627,"results":"16","hashOfConfig":"10"},{"size":8500,"mtime":1607973665185,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17txg5t",{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"/Users/matthewputra/GO/src/SendIt/client/src/index.js",[],["41","42"],"/Users/matthewputra/GO/src/SendIt/client/src/App.js",["43","44","45","46","47"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useEffect, useState} from 'react'\nimport {BrowserRouter} from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\n\nimport MainPage from './Main/Main'\nimport Auth from './Auth/Auth'\nimport api from './constants/apiEndPoints';\nimport status from './constants/statusCode'\n\nconst EXAMPLE_USER = {\n  userName: \"user\",\n  firstName: \"first\",\n  lastName: \"last\",\n  userType: \"customer\"\n}\n\nfunction App() {\n  const [auth, setAuth] = useState(localStorage.getItem(\"Authorization\"));\n  const [user, setUser] = useState({});\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    if (!auth) return;\n    fetch(api.base + api.handlers.login,{\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": auth\n      })\n    })\n    .then(response => response.json())\n    .then(data => setUser(data))\n    .catch(err => {\n      setErr(\"Session expired, logging out\");\n      localStorage.setItem(\"Authorization\", \"\");\n      setAuth(\"\");\n      setUser({});\n    })\n  }, []);\n\n  const handleSetUser = (user) => {\n    setUser(user);\n  }\n\n  const handleSetAuth = (auth) => {\n    setAuth(auth);\n  }\n\n  const handleSetErr = (err) => {\n    setErr(err);\n  }\n\n  function checkErr() {\n    if (err !== \"\") {\n      return <Alert variant=\"primary\">Error: {err}</Alert>\n    }\n    return <></>\n  }\n\n  let renderErr = checkErr();\n\n  let content = <></>;\n  if (auth) {\n    content = <MainPage auth={auth} user={user} handleSetErr={handleSetErr} handleSetUser={handleSetUser}  handleSetAuth={handleSetAuth}/>\n  } else {\n    content = <Auth handleSetErr={handleSetErr} handleSetUser={handleSetUser}  handleSetAuth={handleSetAuth}/>\n  }\n  return (\n    <Container>\n      <header>\n        <h1>SendIt App</h1>\n      </header>\n      <main>\n        {content}\n        {renderErr}\n      </main>\n      <footer>\n        App created by Brandon Z. Ly, Matthey Putra, Saksham Aggarwal and Khoa Luong\n      </footer>\n    </Container>\n  );\n}\n\nexport default App;\n","/Users/matthewputra/GO/src/SendIt/client/src/reportWebVitals.js",[],"/Users/matthewputra/GO/src/SendIt/client/src/constants/statusCode.js",["48"],"export default {\n    ok: 200,\n    created: 201,\n    unauthorized: 401,\n    unsupportedMediaType: 415,\n    internalServerError: 500\n}","/Users/matthewputra/GO/src/SendIt/client/src/constants/apiEndPoints.js",["49"],"export default {\n    base: \"https://api.serversideisfun.me/v1\",\n    testbase: \"https://localhost:4000\",\n    handlers: {\n        login: \"/login\",\n        signUp: \"/signup\",\n        customer: \"/customer\",\n        driver: \"/driver\",\n        order: \"/order\",\n        orderList: \"/orderList\",\n        accept: \"/accept\",\n        complete: \"/complete\",\n        earning: \"/earnings\",\n        available:\"/available\"\n    }\n}","/Users/matthewputra/GO/src/SendIt/client/src/Auth/Auth.js",["50"],"import React, { useState } from 'react'\nimport api from '../constants/apiEndPoints'\nimport status from '../constants/statusCode'\nimport type from '../constants/userType'\n\n// const EXAMPLE_NEW_USER = {\n//     email: \"test3@test.com\",\n//     password: \"password\",\n//     passwordConf: \"password\",\n//     userName: \"hahaha\",\n//     firstName: \"firstlol\",\n//     lastName: \"lastlol\",\n//     type: \"customer\"\n// };\n\n// const EXAMPLE_LOGIN = {\n//     email: \"test3@test.com\",\n//     password: \"password\"\n// }\n\nexport default function Auth(props) {\n    return (\n        <>\n        <SignIn handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser} handleSetAuth={props.handleSetAuth}/>\n        <SignUp handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser} handleSetAuth={props.handleSetAuth}/>\n        </>\n    );\n}\n\nexport function SignIn(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleEmail = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const handlePassword = (event) => {\n        setPassword(event.target.value);\n        console.log(password);\n    }\n\n    const handleSignIn = async (event) => {\n        event.preventDefault();\n        let url = api.base + api.handlers.login;\n        let sendData = {\n            email: email,\n            password: password\n        };\n        //let sendData = EXAMPLE_LOGIN;\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        })\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            const authToken = response.headers.get(\"Authorization\")\n            localStorage.setItem(\"Authorization\", authToken);\n            props.handleSetAuth(authToken)\n            const user = await response.json();\n            props.handleSetUser(user)\n            props.handleSetErr(\"\");\n        }\n    }\n\n    return (\n        <>\n            <h2>sign in</h2>\n            <form>\n                <input placeholder=\"email\" aria-label=\"email\" onChange={handleEmail}></input>\n                <input placeholder=\"password\" type=\"password\" aria-label=\"password\" onChange={handlePassword}></input>\n                <button onClick={handleSignIn}>sign in</button>\n            </form>\n        </> \n    );\n}\n\nexport function SignUp(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [userType, setUserType] = useState(\"\");\n\n    const handleEmail = (event) => {\n        setEmail(event.target.value);\n    }\n    const handlePassword = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handleUserName = (event) => {\n        setUserName(event.target.value);\n    }\n\n    const handleFirstName = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const handleLastName = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const handleUserType = (event) => {\n        setUserType(event.target.value);\n    }\n\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        let url = api.base + api.handlers.signUp;\n        let sendData = {\n            email: email,\n            password: password,\n            passwordConf: password,\n            userName: userName,\n            firstName: firstName,\n            lastName: lastName,\n            type: userType\n        };\n        //let sendData = EXAMPLE_NEW_USER;\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        })\n\n        if (response.status !== status.created) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            const authToken = response.headers.get(\"Authorization\")\n            localStorage.setItem(\"Authorization\", authToken);\n            props.handleSetAuth(authToken)\n            const user = await response.json()\n            props.handleSetUser(user)\n            props.handleSetErr(\"\");\n        }\n    }\n\n    return (\n        <>\n        <h2>sign up</h2>\n        <form>\n            <input placeholder=\"email\" aria-label=\"email\" onChange={handleEmail}></input>\n            <input placeholder=\"password\" type=\"password\" aria-label=\"password\" onChange={handlePassword}></input>\n            <input placeholder=\"username\" aria-label=\"username\" onChange={handleUserName} />\n            <input placeholder=\"first name\" aria-label=\"first name\" onChange={handleFirstName} />\n            <input placeholder=\"last name\" aria-label=\"last name\" onChange={handleLastName} />\n            <input placeholder=\"usertype (customer or driver)\" aria-label=\"user type\" onChange={handleUserType} />\n            {/* <input type=\"radio\" id={type.customer} name=\"userType\" value={type.customer}>Customer</input>\n            <input type=\"radio\" id={type.driverr} name=\"userType\" value={type.driverr}>Driver</input> */}\n            <button onClick={handleSignUp}>sign up</button>\n        </form>\n        </>\n    )\n}","/Users/matthewputra/GO/src/SendIt/client/src/constants/userType.js",["51"],"export default {\n    customer: \"customer\",\n    driver: \"driver\"\n}","/Users/matthewputra/GO/src/SendIt/client/src/Main/Main.js",["52","53"],"import React, { useEffect, useState } from 'react'\nimport { Button } from 'react-bootstrap'\n\nimport api from '../constants/apiEndPoints'\nimport status from '../constants/statusCode'\nimport userType from '../constants/userType'\n\nconst header = [\"OrderID\", \"Date Created\", \"Status\"];\n\nexport default function MainPage(props) {\n    const [page, setPage] = useState(\"Profile\");\n\n    const changeToOrder = () => {\n        setPage(\"Order\")\n    }\n\n    const changeToProfile = () => {\n        setPage(\"Profile\")\n    }\n\n    let content = <></>\n    if (page === \"Profile\") {\n        content = <UserProfile user={props.user} handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser}  handleSetAuth={props.handleSetAuth}/>\n    } else if (page === \"Order\") {\n        let url = \"\";\n        if (props.user.type === userType.customer) {\n            url = api.base + api.handlers.customer + \"/\" + props.user.id + api.handlers.order\n        } else {\n            url = api.base + api.handlers.driver + \"/\" + api.handlers.available\n        }\n        content = <OrderPage user={props.user} url={url} auth={props.auth} handleSetErr={props.handleSetErr}/>\n    }\n\n    return (\n    <div>\n        <h2>main page</h2>\n        {content}\n        <button onClick={changeToOrder}>show order list</button>\n        <button onClick={changeToProfile}>show user profile</button>\n    </div>\n    );\n}\n\nfunction UserProfile(props) {\n    const handleLogOut = async (event) => {\n        event.preventDefault();\n        const response = await fetch(api.base + api.handlers.login, {\n            method: \"DELETE\",\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\")\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            console.log(error)\n            props.handleSetErr(error);\n        } else {\n            localStorage.removeItem(\"Authorization\");\n            props.handleSetUser({});\n            props.handleSetAuth(\"\");\n            props.handleSetErr(\"\");\n        }\n    }\n    return (\n        <>\n            <h3>user profile</h3>\n            <p>user name: {props.user.userName}</p>\n            <p>first name: {props.user.firstName}</p>\n            <p>last name: {props.user.lastName}</p>\n            <p>you are a {props.user.type}</p>\n            <button onClick={handleLogOut}>log out</button>\n        </>\n    );\n}\n\nfunction OrderPage(props) {\n    const [orderList, setOrderList] = useState([]);\n    const [price, setPrice] = useState(0);\n    const [range, setRange] = useState(0);\n    const [pickUp, setPickUp] = useState(\"\");\n    const [dropOff, setDropOff] = useState(\"\");\n\n    useEffect(() => {\n        fetch(props.url , {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        }).then(\n            response => response.json()\n        ).then(\n            data => setOrderList(data)\n        ).catch(err => props.handleSetErr(err))\n    }, [])\n\n    const handlePrice = (event) => {\n        setPrice(parseInt(event.target.value));\n    }\n\n    const handleRange = (event) => {\n        setRange(parseInt(event.target.value));\n    }\n\n    const handlePickUp = (event) => {\n        setPickUp(event.target.value);\n    }\n\n    const handleDropOff = (event) => {\n        setDropOff(event.target.value)\n    }\n\n    const addOrder = async (event) => {\n        event.preventDefault();\n        const url = props.url;\n        const sendData = {\n            price: price,\n            range: range,\n            pickupLocation: pickUp,\n            dropoffLocation: dropOff\n        };\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": props.auth\n            })\n        });\n\n        if (response.status !== status.created) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            setPrice(0);\n            setRange(0);\n            setPickUp(\"\");\n            setDropOff(\"\");\n            props.handleSetErr(\"\");\n        }\n    }\n\n    const updateList = async (event) => {\n        event.preventDefault();\n        const response = await fetch(props.url , {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        })\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            const newList = await response.json();\n            setOrderList(newList)\n        }\n    }\n    \n    const orderListHeader = header.map((col) => <th key={col}>{col}</th>)\n\n    const renderOrderList = orderList.map(order => {return <tr key={order._id}> <td>{order._id}</td> <td>{Date(order.createdAt)}</td> <td>{order.status}</td></tr>})\n\n    let specificContent = <></>\n    if (props.user.type === userType.customer) {\n        specificContent = <AddOrder handlePrice={handlePrice} handleRange={handleRange} handlePickUp={handlePickUp} \n        handleDropOff={handleDropOff} addOrder={addOrder} updateList={updateList}/>\n    } else {\n        specificContent = <ProcessOrder updateList={updateList} handleSetErr={props.handleSetErr} auth={props.auth}/>\n    }\n\n    return (\n        <>\n            <h3>order page</h3>\n            <table className='table table-bordered'>\n                <thead>\n                    <tr>{orderListHeader}</tr>\n                </thead>\n                <tbody>\n                {renderOrderList}\n                </tbody>\n            </table>\n            {specificContent}\n        </>\n    );\n}\n\nfunction AddOrder(props) {\n    return (\n        <form>\n            <input placeholder=\"price\" aria-label=\"price\" onChange={props.handlePrice}></input>\n            <input placeholder=\"range\" aria-label=\"range\" onChange={props.handleRange}></input>\n            <input placeholder=\"pick up location\" aria-label=\"pick up\" onChange={props.handlePickUp}/>\n            <input placeholder=\"drop off location\" aria-label=\"drop off\" onChange={props.handleDropOff}/>\n            <button onClick={props.addOrder}>add order</button>\n            <button onClick={props.updateList}>update order list</button>\n        </form>\n    );\n}\n\nfunction ProcessOrder(props) {\n    const [orderID, setOrderID] = useState(\"\");\n    const [order, setOrder] = useState({});\n    const [accepted, setAccepted] = useState(false);\n\n    const handleOrderID = (event) => {\n        setOrderID(event.target.value)\n    }\n\n    console.log(orderID);\n\n    const handleOrderDetail = async (event) => {\n        event.preventDefault();\n\n        const response = await fetch(api.base + api.handlers.driver + api.handlers.accept + \"/\" + orderID, {\n            method: \"PATCH\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        });\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err);\n        } else {\n            const orderInfo = response.json();\n            setOrder(orderInfo)\n            props.handleSetErr(\"\");\n            setAccepted(true);\n        }\n    }\n\n    const completeOrder = async (event) => {\n        event.preventDefault();\n        const response = await fetch(api.base + api.handlers.driver + api.handlers.complete + \"/\" + orderID, {\n            method: \"PATCH\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        });\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err);\n        } else {\n            setAccepted(false);\n            props.handleSetErr(\"\");\n            props.updateList(event);\n        }\n    }\n\n    let completeOrderButton = <button onClick={handleOrderDetail}>accept order</button>\n    if (accepted) {\n        completeOrderButton = <button onClick={completeOrder}>complete order</button>\n    }\n\n    return (<>\n        <div>\n            <form>\n                <input aria-label=\"order id\" onChange={handleOrderID}></input>\n                {completeOrderButton}\n            </form>\n            <p>Order info</p>\n            <p>{order._id} {order.customerID} {Date(order.createdAt)} {order.driverID} {order.range} {order.price} {order.pickupLocation} {order.dropoffLocation}</p>\n        </div>\n    </>\n    );\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":4,"column":9,"nodeType":"60","messageId":"61","endLine":4,"endColumn":22},{"ruleId":"58","severity":1,"message":"63","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":14},{"ruleId":"58","severity":1,"message":"64","line":13,"column":7,"nodeType":"60","messageId":"61","endLine":13,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":41,"column":6,"nodeType":"67","endLine":41,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":1,"nodeType":"71","endLine":7,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":1,"column":1,"nodeType":"71","endLine":16,"endColumn":2},{"ruleId":"58","severity":1,"message":"72","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":12},{"ruleId":"69","severity":1,"message":"70","line":1,"column":1,"nodeType":"71","endLine":4,"endColumn":2},{"ruleId":"58","severity":1,"message":"73","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"65","severity":1,"message":"74","line":94,"column":8,"nodeType":"67","endLine":94,"endColumn":10,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'status' is defined but never used.","'EXAMPLE_USER' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["78"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'type' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [auth]",{"range":"84","text":"85"},"Update the dependencies array to be: [props]",{"range":"86","text":"87"},[1095,1097],"[auth]",[3012,3014],"[props]"]