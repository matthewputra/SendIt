[{"/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/index.js":"1","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/App.js":"2","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/reportWebVitals.js":"3","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/Auth/Auth.js":"4","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/Main/Main.js":"5","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/constants/apiEndPoints.js":"6","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/constants/statusCode.js":"7","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/constants/userType.js":"8"},{"size":500,"mtime":1607455986899,"results":"9","hashOfConfig":"10"},{"size":2375,"mtime":1608027133909,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607455986900,"results":"12","hashOfConfig":"10"},{"size":8487,"mtime":1608009820818,"results":"13","hashOfConfig":"10"},{"size":20403,"mtime":1608025345321,"results":"14","hashOfConfig":"10"},{"size":414,"mtime":1607973425550,"results":"15","hashOfConfig":"10"},{"size":132,"mtime":1607850713559,"results":"16","hashOfConfig":"10"},{"size":65,"mtime":1607967794388,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1gmkas",{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/index.js",[],["41","42"],"/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/App.js",["43","44","45","46","47"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useEffect, useState} from 'react'\nimport {BrowserRouter} from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\n\nimport MainPage from './Main/Main'\nimport Auth from './Auth/Auth'\nimport api from './constants/apiEndPoints';\nimport status from './constants/statusCode'\n\nconst EXAMPLE_USER = {\n  userName: \"user\",\n  firstName: \"first\",\n  lastName: \"last\",\n  userType: \"customer\"\n}\n\nfunction App() {\n  const [auth, setAuth] = useState(localStorage.getItem(\"Authorization\"));\n  const [user, setUser] = useState({});\n  const [err, setErr] = useState(\"\");\n\n  useEffect(() => {\n    if (!auth) return;\n    fetch(api.base + api.handlers.login,{\n      method: \"GET\",\n      headers: new Headers({\n        \"Authorization\": auth\n      })\n    })\n    .then(response => response.json())\n    .then(data => setUser(data))\n    .catch(err => {\n      setErr(\"Session expired, logging out\");\n      localStorage.setItem(\"Authorization\", \"\");\n      setAuth(\"\");\n      setUser({});\n    })\n  }, []);\n\n  const handleSetUser = (user) => {\n    setUser(user);\n  }\n\n  const handleSetAuth = (auth) => {\n    setAuth(auth);\n  }\n\n  const handleSetErr = (err) => {\n    setErr(err);\n  }\n\n  function checkErr() {\n    if (err !== \"\") {\n      return <Alert variant=\"primary\">Error: {err}</Alert>\n    }\n    return <></>\n  }\n\n  let renderErr = checkErr();\n\n  let content = <></>;\n  if (auth) {\n    content = <MainPage auth={auth} user={user} handleSetErr={handleSetErr} handleSetUser={handleSetUser}  handleSetAuth={handleSetAuth}/>\n  } else {\n    content = <Auth handleSetErr={handleSetErr} handleSetUser={handleSetUser}  handleSetAuth={handleSetAuth}/>\n  }\n  return (\n    <Container>\n      <header>\n        <h1 class='project-title'>SendIt App</h1>\n      </header>\n      <main>\n        {content}\n        <div class='space-maker'></div>\n        {renderErr}\n      </main>\n      <footer class=\"page-footer font-small blue\">\n        <div class=\"footer-copyright text-center py-3\" id='footer'>\n        App created by Brandon Z. Ly, Matthey Putra, Saksham Aggarwal and Khoa Luong\n        </div>\n      </footer>\n      {/* <footer class='footer'>\n        App created by Brandon Z. Ly, Matthey Putra, Saksham Aggarwal and Khoa Luong\n      </footer> */}\n    </Container>\n  );\n}\n\nexport default App;\n","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/reportWebVitals.js",[],"/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/Auth/Auth.js",["48","49"],"import React, { useState } from 'react'\nimport './Auth.css';\nimport api from '../constants/apiEndPoints'\nimport status from '../constants/statusCode'\nimport type from '../constants/userType'\n\n// const EXAMPLE_NEW_USER = {\n//     email: \"test3@test.com\",\n//     password: \"password\",\n//     passwordConf: \"password\",\n//     userName: \"hahaha\",\n//     firstName: \"firstlol\",\n//     lastName: \"lastlol\",\n//     type: \"customer\"\n// };\n\n// const EXAMPLE_LOGIN = {\n//     email: \"test3@test.com\",\n//     password: \"password\"\n// }\n\nexport default function Auth(props) {\n    return (\n        <>\n        <SignIn handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser} handleSetAuth={props.handleSetAuth}/>\n        <SignUp handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser} handleSetAuth={props.handleSetAuth}/>\n        </>\n    );\n}\n\nexport function SignIn(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleEmail = (event) => {\n        setEmail(event.target.value);\n    }\n\n    const handlePassword = (event) => {\n        setPassword(event.target.value);\n        console.log(password);\n    }\n\n    const handleSignIn = async (event) => {\n        event.preventDefault();\n        let url = api.base + api.handlers.login;\n        let sendData = {\n            email: email,\n            password: password\n        };\n        //let sendData = EXAMPLE_LOGIN;\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        })\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            const authToken = response.headers.get(\"Authorization\")\n            localStorage.setItem(\"Authorization\", authToken);\n            props.handleSetAuth(authToken)\n            const user = await response.json();\n            props.handleSetUser(user)\n            props.handleSetErr(\"\");\n        }\n    }\n\n    return (\n        <>\n        <div>\n            <h2>Sign In</h2>\n            <form>\n                <div class='form-group'>\n                    <label for=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-label=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={handleEmail}></input>\n                    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={handlePassword}></input>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" onClick={handleSignIn}>Sign In</button>\n            </form>\n            {/* <form>\n                <input placeholder=\"email\" aria-label=\"email\" onChange={handleEmail}></input>\n                <input placeholder=\"password\" type=\"password\" aria-label=\"password\" onChange={handlePassword}></input>\n                <button onClick={handleSignIn}>sign in</button>\n            </form> */}\n        </div>\n        </> \n    );\n}\n\nexport function SignUp(props) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [userType, setUserType] = useState(\"\");\n\n    const handleEmail = (event) => {\n        setEmail(event.target.value);\n    }\n    const handlePassword = (event) => {\n        setPassword(event.target.value);\n    }\n\n    const handleUserName = (event) => {\n        setUserName(event.target.value);\n    }\n\n    const handleFirstName = (event) => {\n        setFirstName(event.target.value);\n    }\n\n    const handleLastName = (event) => {\n        setLastName(event.target.value);\n    }\n\n    const handleUserType = (event) => {\n        setUserType(event.target.value);\n    }\n\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        let url = api.base + api.handlers.signUp;\n        let sendData = {\n            email: email,\n            password: password,\n            passwordConf: password,\n            userName: userName,\n            firstName: firstName,\n            lastName: lastName,\n            type: userType\n        };\n        //let sendData = EXAMPLE_NEW_USER;\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        })\n\n        if (response.status !== status.created) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            const authToken = response.headers.get(\"Authorization\")\n            localStorage.setItem(\"Authorization\", authToken);\n            props.handleSetAuth(authToken)\n            const user = await response.json()\n            props.handleSetUser(user)\n            props.handleSetErr(\"\");\n        }\n    }\n\n    return (\n        <>\n        <div class=\"container\" id=\"sign-up\">\n        \t<div class=\"panel panel-default\">\n        \t\t<div class=\"panel-heading\">\n\t\t\t    \t\t<h3 class=\"panel-title\">Please sign up if you don't have an account!</h3>\n\t\t\t \t\t\t</div>\n\t\t\t \t\t\t<div class=\"panel-body\">\n\t\t\t    \t\t<form role=\"form\">\n\t\t\t    \t\t\t<div class=\"row\">\n\t\t\t    \t\t\t\t<div class=\"col-xs-6 col-sm-6 col-md-6\">\n\t\t\t    \t\t\t\t\t<div class=\"form-group\">\n\t\t\t                            <input type=\"text\" name=\"first_name\" id=\"first_name\" class=\"form-control input-sm\" placeholder=\"First Name\" onChange={handleFirstName}></input>\n\t\t\t    \t\t\t\t\t</div>\n\t\t\t    \t\t\t\t</div>\n\t\t\t    \t\t\t\t<div class=\"col-xs-6 col-sm-6 col-md-6\">\n\t\t\t    \t\t\t\t\t<div class=\"form-group\">\n\t\t\t    \t\t\t\t\t\t<input type=\"text\" name=\"last_name\" id=\"last_name\" class=\"form-control input-sm\" placeholder=\"Last Name\" onChange={handleLastName}></input>\n\t\t\t    \t\t\t\t\t</div>\n\t\t\t    \t\t\t\t</div>\n\t\t\t    \t\t\t</div>\n                            \n                            <div class=\"form-group\">\n\t\t\t    \t\t\t\t<input type=\"username\" name=\"username\" id=\"email\" class=\"form-control input-sm\" placeholder=\"Username\" onChange={handleUserName}></input>\n\t\t\t    \t\t\t</div>\n\n\t\t\t    \t\t\t<div class=\"form-group\">\n\t\t\t    \t\t\t\t<input type=\"email\" name=\"email\" id=\"email\" class=\"form-control input-sm\" placeholder=\"Email Address\" onChange={handleEmail}></input>\n\t\t\t    \t\t\t</div>\n\n                            <div class=\"form-group\">\n                                <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control input-sm\" placeholder=\"Password\" onChange={handlePassword}></input>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <input type=\"usertype\" name=\"usertype\" id=\"password\" class=\"form-control input-sm\" placeholder=\"'customer' or 'driver'\" onChange={handleUserType}></input>\n                            </div>\n\t\t\t    \t\t\t\n\t\t\t    \t\t\t<button class=\"btn btn-info btn-block\" onClick={handleSignUp}>Register</button>\n\t\t\t    \t\t\n\t\t\t    \t\t</form>\n\t\t\t    \t</div>\n\t    \t\t</div>\n        </div>\n            {/* <h2>sign up</h2>\n            <form>\n                <input placeholder=\"email\" aria-label=\"email\" onChange={handleEmail}></input>\n                <input placeholder=\"password\" type=\"password\" aria-label=\"password\" onChange={handlePassword}></input>\n                <input placeholder=\"username\" aria-label=\"username\" onChange={handleUserName} />\n                <input placeholder=\"first name\" aria-label=\"first name\" onChange={handleFirstName} />\n                <input placeholder=\"last name\" aria-label=\"last name\" onChange={handleLastName} />\n                <input placeholder=\"customer or driver\" aria-label=\"user type\" onChange={handleUserType} />\n                <input type=\"radio\" id={type.customer} name=\"userType\" value={type.customer}>Customer</input>\n                <input type=\"radio\" id={type.driverr} name=\"userType\" value={type.driverr}>Driver</input>\n                <button onClick={handleSignUp}>sign up</button>\n            </form> */}\n        </>\n    )\n}","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/Main/Main.js",["50","51","52","53","54","55","56","57","58","59","60"],"import React, { useEffect, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport './Main.css';\n\nimport api from '../constants/apiEndPoints'\nimport status from '../constants/statusCode'\nimport userType from '../constants/userType'\n\nconst header = [\"OrderID\", \"Date Created\", \"Pick up Location\", \"Drop off Location\", \"Price\", \"Range (mi)\", \"Status\"];\n\nexport default function MainPage(props) {\n    const [page, setPage] = useState(\"Profile\");\n\n    const changeToOrder = () => {\n        setPage(\"Order\")\n    }\n\n    const changeToProfile = () => {\n        setPage(\"Profile\")\n    }\n\n    let content = <></>\n    if (page === \"Profile\") {\n        let urlDrEarn = \"\"\n        if (props.user.type === userType.driver) {\n            urlDrEarn = api.base + api.handlers.driver + api.handlers.earning\n        }\n        content = <UserProfile user={props.user} urlDrEarn={urlDrEarn} auth={props.auth} handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser}  handleSetAuth={props.handleSetAuth}/>\n    } else if (page === \"Order\") {\n        let url = \"\";\n        let urlCompl = \"\";\n        let urlPend = \"\";\n        if (props.user.type === userType.customer) {\n            url = api.base + api.handlers.customer + \"/\" + props.user.id + api.handlers.order\n        } else {\n            url = api.base + api.handlers.driver + \"/\" + api.handlers.available\n            urlPend = api.base + api.handlers.driver + \"/\" + props.user.id + api.handlers.orderList\n            urlCompl = api.base + api.handlers.driver + \"/\" + api.handlers.complete \n        }\n        content = <OrderPage user={props.user} url={url} urlCompl={urlCompl} urlPend={urlPend} auth={props.auth} handleSetErr={props.handleSetErr}/>\n    }\n\n    return (\n    <div>\n        <h2>Main page</h2>\n        <div class=\"container justify-content-center\">\n            <div class=\"card p-3\">\n                <div class=\"d-flex align-items-center\">\n                    <div class=\"ml-3 w-100\">\n                        <div class=\"button mt-2 d-flex flex-row align-items-center\"> \n                            <button class=\"btn btn-outline-primary w-100\" onClick={changeToOrder}>Show Order List</button> \n                        </div>\n                        <div class=\"button mt-2 d-flex flex-row align-items-center\"> \n                            <button class=\"btn btn-outline-primary w-100\" onClick={changeToProfile}>Show Profile</button> \n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        {content}\n        {/* <button onClick={changeToOrder}>show order list</button> */}\n        {/* <button onClick={changeToProfile}>show user profile</button> */}\n    </div>\n    );\n}\n\nfunction UserProfile(props) {\n    const [earnings, setEarnings] = useState(\"\") \n\n    const handleEarnings = async (event) => {\n        event.preventDefault();\n        const response = await fetch(props.urlDrEarn , {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        })\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            const total = await response.text();\n            setEarnings(total)\n        }\n    }\n\n    const handleLogOut = async (event) => {\n        event.preventDefault();\n        const response = await fetch(api.base + api.handlers.login, {\n            method: \"DELETE\",\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\")\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            console.log(error)\n            props.handleSetErr(error);\n        } else {\n            localStorage.removeItem(\"Authorization\");\n            props.handleSetUser({});\n            props.handleSetAuth(\"\");\n            props.handleSetErr(\"\");\n        }\n    }\n\n    if (props.user.type === userType.customer) {\n        return (\n            <>\n                <div class=\"container justify-content-center user-profile\">\n                    <div class=\"card p-3\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"image\"> <img src=\"https://i.ibb.co/HCrg2Nf/User.png\" class=\"rounded\" width=\"155\"/> </div>\n                            <div class=\"ml-3 w-100\">\n                                <h4 class=\"mb-0 mt-0\">{props.user.firstName} {props.user.lastName}</h4> \n                                <div class=\"user-info\">\n                                    <h6>UserType: {props.user.type}</h6>\n                                    <h6>Email: {props.user.email}</h6>\n                                </div>\n                                <div class=\"button mt-2 d-flex flex-row align-items-center\"> \n                                    <button class=\"btn btn-sm btn-outline-primary w-100\" onClick={handleLogOut}>Logout</button> \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    \n                {/* <h3>user profile</h3>\n                <p>user name: {props.user.userName}</p>\n                <p>first name: {props.user.firstName}</p>\n                <p>last name: {props.user.lastName}</p>\n                <p>you are a {props.user.type}</p>\n                <button onClick={handleLogOut}>log out</button> */}\n            </>\n        );\n    } else {\n        return (\n            <>\n                <div class=\"container justify-content-center user-profile\">\n                    <div class=\"card p-3\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"image\"> <img src=\"https://i.ibb.co/HCrg2Nf/User.png\" class=\"rounded\" width=\"155\"/> </div>\n                            <div class=\"ml-3 w-100\">\n                                <h4 class=\"mb-0 mt-0\">{props.user.firstName} {props.user.lastName}</h4> \n                                <div class=\"user-info\">\n                                    <h6>UserType: {props.user.type}</h6>\n                                    <h6>Email: {props.user.email}</h6>\n                                </div>\n                                <div class=\"button mt-2 d-flex flex-row align-items-center\"> \n                                    <button class=\"btn btn-outline-primary w-100\" onClick={handleEarnings}>Total earnings: ${earnings}</button> \n                                </div>\n                                <div class=\"button mt-2 d-flex flex-row align-items-center\"> \n                                    <button class=\"btn btn-outline-primary w-100\" onClick={handleLogOut}>Logout</button> \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n    \n                {/* <h3>user profile</h3>\n                <p>user name: {props.user.userName}</p>\n                <p>first name: {props.user.firstName}</p>\n                <p>last name: {props.user.lastName}</p>\n                <p>you are a {props.user.type}</p>\n                <button onClick={handleLogOut}>log out</button> */}\n            </>\n        );\n    }\n    \n}\n\nfunction OrderPage(props) {\n    const [orderList, setOrderList] = useState([]);\n    const [price, setPrice] = useState(0);\n    const [range, setRange] = useState(0);\n    const [pickUp, setPickUp] = useState(\"\");\n    const [dropOff, setDropOff] = useState(\"\");\n\n    const [completedOrderList, setCompletedOrderList] = useState([]);\n    const [pendingOrderList, setPendingOrderList] = useState([]);\n\n    useEffect(() => {\n        fetch(props.url , {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        }).then(\n            response => response.json()\n        ).then(\n            data => setOrderList(data)\n        ).catch(err => props.handleSetErr(err))\n    }, [])\n\n    useEffect(() => {\n        if (props.user.type === userType.driver) {\n            fetch(props.urlPend , {\n                method: \"GET\",\n                headers: new Headers({\n                    \"Authorization\": props.auth\n                })\n            }).then(\n                response => response.json()\n            ).then(\n                data => setPendingOrderList(data)\n            ).catch(err => props.handleSetErr(err))}\n        }, [])\n\n    useEffect(() => {\n        if (props.user.type === userType.driver) {\n            fetch(props.urlCompl , {\n                method: \"GET\",\n                headers: new Headers({\n                    \"Authorization\": props.auth\n                })\n            }).then(\n                response => response.json()\n            ).then(\n                data => setCompletedOrderList(data)\n            ).catch(err => props.handleSetErr(err))}\n        }, [])\n\n    const handlePrice = (event) => {\n        setPrice(parseInt(event.target.value));\n    }\n\n    const handleRange = (event) => {\n        setRange(parseInt(event.target.value));\n    }\n\n    const handlePickUp = (event) => {\n        setPickUp(event.target.value);\n    }\n\n    const handleDropOff = (event) => {\n        setDropOff(event.target.value)\n    }\n\n    const addOrder = async (event) => {\n        event.preventDefault();\n        const url = props.url;\n        const sendData = {\n            price: price,\n            range: range,\n            pickupLocation: pickUp,\n            dropoffLocation: dropOff\n        };\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": props.auth\n            })\n        });\n\n        if (response.status !== status.created) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            setPrice(0);\n            setRange(0);\n            setPickUp(\"\");\n            setDropOff(\"\");\n            props.handleSetErr(\"\");\n        }\n    }\n\n    const updateList = async (event) => {\n        event.preventDefault();\n        const response = await fetch(props.url , {\n            method: \"GET\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        })\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err)\n        } else {\n            const newList = await response.json();\n            setOrderList(newList)\n        }\n    }\n    \n    const orderListHeader = header.map((col) => <th key={col}>{col}</th>)\n\n    const renderOrderList = orderList.map(order => {\n        return (\n            <tr key={order._id}> \n                <td>{order._id}</td> \n                <td>{order.createdAt}</td>\n                <td>{order.pickupLocation}</td>\n                <td>{order.dropoffLocation}</td>\n                <td>{order.price}</td>\n                <td>{order.range}</td>\n                <td>{order.status}</td>\n            </tr>\n        )\n    })\n\n    const renderPendingOrderList = pendingOrderList.map(order => {\n        return (\n            <tr key={order._id}> \n                <td>{order._id}</td> \n                <td>{order.editedAt}</td>\n                <td>{order.pickupLocation}</td>\n                <td>{order.dropoffLocation}</td>\n                <td>{order.price}</td>\n                <td>{order.range}</td>\n                <td>{order.status}</td>\n            </tr>\n        )\n    })\n\n    const renderCompletedOrderList = completedOrderList.map(order => {\n        return (\n            <tr key={order._id}> \n                <td>{order._id}</td> \n                <td>{order.editedAt}</td>\n                <td>{order.pickupLocation}</td>\n                <td>{order.dropoffLocation}</td>\n                <td>{order.price}</td>\n                <td>{order.range}</td>\n                <td>{order.status}</td>\n            </tr>\n        )\n    })\n\n    let specificContent = <></>\n    let specificContent2 = <></>\n    if (props.user.type === userType.customer) {\n        specificContent = <AddOrder handlePrice={handlePrice} handleRange={handleRange} handlePickUp={handlePickUp} \n        handleDropOff={handleDropOff} addOrder={addOrder} updateList={updateList}/>\n    } else {\n        specificContent = <AcceptOrder updateList={updateList} handleSetErr={props.handleSetErr} auth={props.auth}/>\n        specificContent2 = <CompleteOrder updateList={updateList} handleSetErr={props.handleSetErr} auth={props.auth} /> \n    }\n\n    if (props.user.type === userType.customer) {\n        return (\n            <>\n            <div>\n                <div class=\"order-page\">\n                    <h3>Available Orders' page</h3>\n                    <table className='table table-bordered'>\n                        <thead>\n                            {orderListHeader}\n                        </thead>\n                        <tbody>\n                        {renderOrderList}\n                        </tbody>\n                    </table>\n                    {specificContent}\n                </div>\n            </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n            <div>\n                <div class=\"order-page\">\n                    <h3>Available Orders' page</h3>\n                    <table className='table table-bordered'>\n                        <thead>\n                            {orderListHeader}\n                        </thead>\n                        <tbody>\n                        {renderOrderList}\n                        </tbody>\n                    </table>\n                    {specificContent}\n                </div>\n                <div class=\"order-page\">\n                    <h3>Pending Orders' page</h3>\n                    <table className='table table-bordered'>\n                        <thead>\n                            {orderListHeader}\n                        </thead>\n                        <tbody>\n                        {renderPendingOrderList}\n                        </tbody>\n                    </table>\n                    {specificContent2}\n                </div>\n                <div class=\"order-page\">\n                    <h3>Completed Orders' page</h3>\n                    <table className='table table-bordered'>\n                        <thead>\n                            {orderListHeader}\n                        </thead>\n                        <tbody>\n                        {renderCompletedOrderList}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nfunction AddOrder(props) {\n    return (\n        <div>\n        <div class=\"button mt-2 d-flex flex-row align-items-center\"> \n            <button class=\"btn btn-sm btn-outline-primary w-100\" onClick={props.updateList}>Update Order List</button> \n        </div>\n        <div class=\"container pt-4 add-order\">\n        <form>\n            <div class='form-group'>\n                <label for=\"firstname\">Recipient's First Name</label>\n                <input type=\"first name\" class=\"form-control\" aria-label=\"firstname\" placeholder=\"First\"></input>\n            </div>\n            <div class='form-group'>\n                <label for=\"lastname\">Recipient's Last Name</label>\n                <input type=\"last name\" class=\"form-control\" aria-label=\"lastname\" placeholder=\"Last\"></input>\n            </div>\n            <div class='form-group'>\n                <label for=\"pickup\">Pick up Location</label>\n                <input type=\"email\" class=\"form-control\" aria-label=\"pickup\" placeholder=\"Enter complete address (street, city, state)\" onChange={props.handlePickUp}></input>\n            </div>\n            <div class='form-group'>\n                <label for=\"drop off\">Drop off Location</label>\n                <input type=\"email\" class=\"form-control\" aria-label=\"drop off\" placeholder=\"Enter complete address (street, city, state)\" onChange={props.handleDropOff}></input>\n            </div>\n            <button class=\"btn btn-primary add-button\" onClick={props.addOrder}>Place Order</button>\n        </form>\n        </div>\n        </div>\n    );\n        // <form>\n        //     <input placeholder=\"price\" aria-label=\"price\" onChange={props.handlePrice}></input>\n        //     <input placeholder=\"range\" aria-label=\"range\" onChange={props.handleRange}></input>\n        //     <input placeholder=\"pick up location\" aria-label=\"pick up\" onChange={props.handlePickUp}/>\n        //     <input placeholder=\"drop off location\" aria-label=\"drop off\" onChange={props.handleDropOff}/>\n        //     <button onClick={props.addOrder}>add order</button>\n        //     <button onClick={props.updateList}>update order list</button>\n        // </form>\n    // );\n}\n\nfunction AcceptOrder(props) {\n    const [orderID, setOrderID] = useState(\"\");\n    const [order, setOrder] = useState({});\n    const [accepted, setAccepted] = useState(false);\n\n    const handleOrderID = (event) => {\n        setOrderID(event.target.value)\n    }\n\n    console.log(orderID);\n\n    const handleOrderDetail = async (event) => {\n        event.preventDefault();\n\n        const response = await fetch(api.base + api.handlers.driver + api.handlers.accept + \"/\" + orderID, {\n            method: \"PATCH\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        });\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err);\n        } else {\n            const orderInfo = response.json();\n            setOrder(orderInfo)\n            props.handleSetErr(\"\");\n            setAccepted(true);\n        }\n    }\n\n    // const completeOrder = async (event) => {\n    //     event.preventDefault();\n    //     const response = await fetch(api.base + api.handlers.driver + api.handlers.complete + \"/\" + orderID, {\n    //         method: \"PATCH\",\n    //         headers: new Headers({\n    //             \"Authorization\": props.auth\n    //         })\n    //     });\n\n    //     if (response.status !== status.ok) {\n    //         const err = await response.text();\n    //         props.handleSetErr(err);\n    //     } else {\n    //         setAccepted(false);\n    //         props.handleSetErr(\"\");\n    //         props.updateList(event);\n    //     }\n    // }\n\n    let acceptOrderButton = <button onClick={handleOrderDetail}>accept order</button>\n\n    return (<>\n        <div>\n            <form>\n                <input aria-label=\"order id\" onChange={handleOrderID}></input>\n                {acceptOrderButton}\n            </form>\n            {/* <p>Order info</p>\n            <p>{order._id} {order.customerID} {Date(order.createdAt)} {order.driverID} {order.range} {order.price} {order.pickupLocation} {order.dropoffLocation}</p> */}\n        </div>\n    </>\n    );\n}\n\nfunction CompleteOrder(props) {\n    const [orderID, setOrderID] = useState(\"\");\n    const [order, setOrder] = useState({});\n    const [accepted, setAccepted] = useState(false);\n\n    const handleOrderID = (event) => {\n        setOrderID(event.target.value)\n    }\n\n    console.log(orderID);\n\n    const completeOrder = async (event) => {\n        event.preventDefault();\n        const response = await fetch(api.base + api.handlers.driver + api.handlers.complete + \"/\" + orderID, {\n            method: \"PATCH\",\n            headers: new Headers({\n                \"Authorization\": props.auth\n            })\n        });\n\n        if (response.status !== status.ok) {\n            const err = await response.text();\n            props.handleSetErr(err);\n        } else {\n            const orderInfo = response.json();\n            setOrder(orderInfo);\n            props.handleSetErr(\"\");\n            props.updateList(event);\n        }\n    }\n\n    let completeOrderButton = <></>\n    completeOrderButton = <button onClick={completeOrder}>complete order</button>\n\n    return (<>\n        <div>\n            <form>\n                <input aria-label=\"order id\" onChange={handleOrderID}></input>\n                {completeOrderButton}\n            </form>\n            {/* <p>Order info</p>\n            <p>{order._id} {order.customerID} {Date(order.createdAt)} {order.driverID} {order.range} {order.price} {order.pickupLocation} {order.dropoffLocation}</p> */}\n        </div>\n    </>\n    );\n}","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/constants/apiEndPoints.js",["61"],"export default {\n    base: \"https://api.serversideisfun.me/v1\",\n    testbase: \"https://localhost:4000\",\n    handlers: {\n        login: \"/login\",\n        signUp: \"/signup\",\n        customer: \"/customer\",\n        driver: \"/driver\",\n        order: \"/order\",\n        orderList: \"/orderList\",\n        accept: \"/accept\",\n        complete: \"/complete\",\n        earning: \"/earnings\",\n        available:\"/available\"\n    }\n}","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/constants/statusCode.js",["62"],"export default {\n    ok: 200,\n    created: 201,\n    unauthorized: 401,\n    unsupportedMediaType: 415,\n    internalServerError: 500\n}","/Users/sakshamaggarwal/Desktop/CourseWork/Super-Senior-Year/Autumn_2020/INFO-441/go/src/github.com/matthewputra/SendIt/client/src/constants/userType.js",["63"],"export default {\n    customer: \"customer\",\n    driver: \"driver\"\n}",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"72","line":4,"column":9,"nodeType":"70","messageId":"71","endLine":4,"endColumn":22},{"ruleId":"68","severity":1,"message":"73","line":11,"column":8,"nodeType":"70","messageId":"71","endLine":11,"endColumn":14},{"ruleId":"68","severity":1,"message":"74","line":13,"column":7,"nodeType":"70","messageId":"71","endLine":13,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":41,"column":6,"nodeType":"77","endLine":41,"endColumn":8,"suggestions":"78"},{"ruleId":"68","severity":1,"message":"79","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":172,"column":10,"nodeType":"82","endLine":172,"endColumn":28},{"ruleId":"68","severity":1,"message":"83","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":115,"column":49,"nodeType":"82","endLine":115,"endColumn":123},{"ruleId":"84","severity":1,"message":"85","line":144,"column":49,"nodeType":"82","endLine":144,"endColumn":123},{"ruleId":"75","severity":1,"message":"86","line":195,"column":8,"nodeType":"77","endLine":195,"endColumn":10,"suggestions":"87"},{"ruleId":"75","severity":1,"message":"86","line":209,"column":12,"nodeType":"77","endLine":209,"endColumn":14,"suggestions":"88"},{"ruleId":"75","severity":1,"message":"86","line":223,"column":12,"nodeType":"77","endLine":223,"endColumn":14,"suggestions":"89"},{"ruleId":"68","severity":1,"message":"90","line":449,"column":12,"nodeType":"70","messageId":"71","endLine":449,"endColumn":17},{"ruleId":"68","severity":1,"message":"91","line":450,"column":12,"nodeType":"70","messageId":"71","endLine":450,"endColumn":20},{"ruleId":"68","severity":1,"message":"90","line":515,"column":12,"nodeType":"70","messageId":"71","endLine":515,"endColumn":17},{"ruleId":"68","severity":1,"message":"91","line":516,"column":12,"nodeType":"70","messageId":"71","endLine":516,"endColumn":20},{"ruleId":"68","severity":1,"message":"92","line":516,"column":22,"nodeType":"70","messageId":"71","endLine":516,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":1,"column":1,"nodeType":"95","endLine":16,"endColumn":2},{"ruleId":"93","severity":1,"message":"94","line":1,"column":1,"nodeType":"95","endLine":7,"endColumn":2},{"ruleId":"93","severity":1,"message":"94","line":1,"column":1,"nodeType":"95","endLine":4,"endColumn":2},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'status' is defined but never used.","'EXAMPLE_USER' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'type' is defined but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["99"],["100"],["101"],"'order' is assigned a value but never used.","'accepted' is assigned a value but never used.","'setAccepted' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},{"desc":"104","fix":"107"},"Update the dependencies array to be: [auth]",{"range":"108","text":"109"},"Update the dependencies array to be: [props]",{"range":"110","text":"111"},{"range":"112","text":"111"},{"range":"113","text":"111"},[1095,1097],"[auth]",[8019,8021],"[props]",[8469,8471],[8922,8924]]