[{"D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\index.js":"1","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\reportWebVitals.js":"2","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\App.js":"3","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\Main\\Main.js":"4","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\Auth\\Auth.js":"5","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\main\\Main.js":"6","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\auth\\Auth.js":"7","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\constants\\apiEndPoints.js":"8","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\constants\\statusCode.js":"9","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\constants\\userType.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2141,"mtime":1607963041512,"results":"14","hashOfConfig":"12"},{"size":979,"mtime":1607838857460,"results":"15","hashOfConfig":"12"},{"size":1211,"mtime":1607833981053,"results":"16","hashOfConfig":"12"},{"size":8767,"mtime":1607970981760,"results":"17","hashOfConfig":"12"},{"size":5611,"mtime":1607968330262,"results":"18","hashOfConfig":"12"},{"size":429,"mtime":1607970421901,"results":"19","hashOfConfig":"12"},{"size":138,"mtime":1607848951464,"results":"20","hashOfConfig":"12"},{"size":68,"mtime":1607939520391,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vmzbqr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\index.js",[],["52","53"],"D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\reportWebVitals.js",[],"D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\App.js",["54","55","56","57","58"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {useEffect, useState} from 'react'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport MainPage from './main/Main'\r\nimport Auth from './auth/Auth'\r\nimport api from './constants/apiEndPoints';\r\nimport status from './constants/statusCode'\r\n\r\nconst EXAMPLE_USER = {\r\n  userName: \"user\",\r\n  firstName: \"first\",\r\n  lastName: \"last\",\r\n  userType: \"customer\"\r\n}\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useState(localStorage.getItem(\"Authorization\"));\r\n  const [user, setUser] = useState({});\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!auth) return;\r\n    fetch(api.base + api.handlers.login,{\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Authorization\": auth\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => setUser(data))\r\n    .catch(err => {\r\n      setErr(\"Session expired, logging out\");\r\n      localStorage.setItem(\"Authorization\", \"\");\r\n      setAuth(\"\");\r\n      setUser({});\r\n    })\r\n  }, []);\r\n\r\n  const handleSetUser = (user) => {\r\n    setUser(user);\r\n  }\r\n\r\n  const handleSetAuth = (auth) => {\r\n    setAuth(auth);\r\n  }\r\n\r\n  const handleSetErr = (err) => {\r\n    setErr(err);\r\n  }\r\n\r\n  function checkErr() {\r\n    if (err !== \"\") {\r\n      return <Alert variant=\"primary\">Error: {err}</Alert>\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  let renderErr = checkErr();\r\n\r\n  let content = <></>;\r\n  if (auth) {\r\n    content = <MainPage auth={auth} user={user} handleSetErr={handleSetErr} handleSetUser={handleSetUser}  handleSetAuth={handleSetAuth}/>\r\n  } else {\r\n    content = <Auth handleSetErr={handleSetErr} handleSetUser={handleSetUser}  handleSetAuth={handleSetAuth}/>\r\n  }\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <h1>SendIt App</h1>\r\n      </header>\r\n      <main>\r\n        {content}\r\n        {renderErr}\r\n      </main>\r\n      <footer>\r\n        App created by Brandon Z. Ly, Matthey Putra, Saksham Aggarwal and Khoa Luong\r\n      </footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\Main\\Main.js",[],"D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\Auth\\Auth.js",["59","60"],"import React, { useState } from 'react'\r\n\r\nexport default function Auth(props) {\r\n    return (\r\n        <>\r\n        <SignIn />\r\n        <SignUp />\r\n        </>\r\n    );\r\n}\r\n\r\nexport function SignIn(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    console.log(\"Email: \" + email);\r\n\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n        console.log(password);\r\n    }\r\n    console.log(\"Password: \" + password);\r\n\r\n    return (\r\n        <>\r\n            <p>sign in</p>\r\n            <form>\r\n                <input aria-label=\"email\" onChange={handleEmail}></input>\r\n                <input aria-label=\"password\" onChange={handlePassword}></input>\r\n                <button>sign in</button>\r\n            </form>\r\n        </> \r\n    );\r\n}\r\n\r\nexport function SignUp(props) {\r\n    const[newUser, setNewUser] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConf: \"\",\r\n        userName: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        userType: \"\"\r\n    })\r\n\r\n    return (\r\n        <p>sign up</p>\r\n    )\r\n}",["61","62"],"D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\main\\Main.js",["63","64"],"import React, { useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport api from '../constants/apiEndPoints'\r\nimport status from '../constants/statusCode'\r\nimport userType from '../constants/userType'\r\n\r\nconst header = [\"OrderID\", \"Date Created\", \"Status\"];\r\n\r\nexport default function MainPage(props) {\r\n    const [page, setPage] = useState(\"Profile\");\r\n\r\n    const changeToOrder = () => {\r\n        setPage(\"Order\")\r\n    }\r\n\r\n    const changeToProfile = () => {\r\n        setPage(\"Profile\")\r\n    }\r\n\r\n    let content = <></>\r\n    if (page === \"Profile\") {\r\n        content = <UserProfile user={props.user} handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser}  handleSetAuth={props.handleSetAuth}/>\r\n    } else if (page === \"Order\") {\r\n        let url = \"\";\r\n        if (props.user.type === userType.customer) {\r\n            url = api.base + api.handlers.customer + \"/\" + props.user.id + api.handlers.order\r\n        } else {\r\n            url = api.base + api.handlers.driver + \"/\" + api.handlers.available\r\n        }\r\n        content = <OrderPage user={props.user} url={url} auth={props.auth} handleSetErr={props.handleSetErr}/>\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <h2>main page</h2>\r\n        {content}\r\n        <button onClick={changeToOrder}>show order list</button>\r\n        <button onClick={changeToProfile}>show user profile</button>\r\n    </div>\r\n    );\r\n}\r\n\r\nfunction UserProfile(props) {\r\n    const handleLogOut = async (event) => {\r\n        event.preventDefault();\r\n        const response = await fetch(api.base + api.handlers.login, {\r\n            method: \"DELETE\",\r\n            headers: new Headers({\r\n                \"Authorization\": localStorage.getItem(\"Authorization\")\r\n            })\r\n        });\r\n        if (response.status >= 300) {\r\n            const error = await response.text();\r\n            console.log(error)\r\n            props.handleSetErr(error);\r\n        } else {\r\n            localStorage.removeItem(\"Authorization\");\r\n            props.handleSetUser({});\r\n            props.handleSetAuth(\"\");\r\n            props.handleSetErr(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h3>user profile</h3>\r\n            <p>user name: {props.user.userName}</p>\r\n            <p>first name: {props.user.firstName}</p>\r\n            <p>last name: {props.user.lastName}</p>\r\n            <p>you are a {props.user.type}</p>\r\n            <button onClick={handleLogOut}>log out</button>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction OrderPage(props) {\r\n    const [orderList, setOrderList] = useState([]);\r\n    const [price, setPrice] = useState(0);\r\n    const [range, setRange] = useState(0);\r\n    const [pickUp, setPickUp] = useState(\"\");\r\n    const [dropOff, setDropOff] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(props.url , {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Authorization\": props.auth\r\n            })\r\n        }).then(\r\n            response => response.json()\r\n        ).then(\r\n            data => setOrderList(data)\r\n        ).catch(err => props.handleSetErr(err))\r\n    }, [])\r\n\r\n    const handlePrice = (event) => {\r\n        setPrice(parseInt(event.target.value));\r\n    }\r\n\r\n    const handleRange = (event) => {\r\n        setRange(parseInt(event.target.value));\r\n    }\r\n\r\n    const handlePickUp = (event) => {\r\n        setPickUp(event.target.value);\r\n    }\r\n\r\n    const handleDropOff = (event) => {\r\n        setDropOff(event.target.value)\r\n    }\r\n\r\n    const addOrder = async (event) => {\r\n        event.preventDefault();\r\n        const url = props.url;\r\n        const sendData = {\r\n            price: price,\r\n            range: range,\r\n            pickupLocation: pickUp,\r\n            dropoffLocation: dropOff\r\n        };\r\n        const response = await fetch(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": props.auth\r\n            })\r\n        });\r\n\r\n        if (response.status !== status.created) {\r\n            const err = await response.text();\r\n            props.handleSetErr(err)\r\n        } else {\r\n            setPrice(0);\r\n            setRange(0);\r\n            setPickUp(\"\");\r\n            setDropOff(\"\");\r\n            props.handleSetErr(\"\");\r\n        }\r\n    }\r\n\r\n    const updateList = async (event) => {\r\n        event.preventDefault();\r\n        const response = await fetch(props.url , {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Authorization\": props.auth\r\n            })\r\n        })\r\n\r\n        if (response.status !== status.ok) {\r\n            const err = await response.text();\r\n            props.handleSetErr(err)\r\n        } else {\r\n            const newList = await response.json();\r\n            setOrderList(newList)\r\n        }\r\n    }\r\n    \r\n    const orderListHeader = header.map((col) => <th key={col}>{col}</th>)\r\n\r\n    const renderOrderList = orderList.map(order => {return <tr key={order._id}> <td>{order._id}</td> <td>{Date(order.createdAt)}</td> <td>{order.status}</td></tr>})\r\n\r\n    let specificContent = <></>\r\n    if (props.user.type === userType.customer) {\r\n        specificContent = <AddOrder handlePrice={handlePrice} handleRange={handleRange} handlePickUp={handlePickUp} \r\n        handleDropOff={handleDropOff} addOrder={addOrder} updateList={updateList}/>\r\n    } else {\r\n        specificContent = <ProcessOrder updateList={updateList} handleSetErr={props.handleSetErr} auth={props.auth}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>order page</h3>\r\n            <table className='table table-bordered'>\r\n                <thead>\r\n                    <tr>{orderListHeader}</tr>\r\n                </thead>\r\n                <tbody>\r\n                {renderOrderList}\r\n                </tbody>\r\n            </table>\r\n            {specificContent}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction AddOrder(props) {\r\n    return (\r\n        <form>\r\n            <input placeholder=\"price\" aria-label=\"price\" onChange={props.handlePrice}></input>\r\n            <input placeholder=\"range\" aria-label=\"range\" onChange={props.handleRange}></input>\r\n            <input placeholder=\"pick up location\" aria-label=\"pick up\" onChange={props.handlePickUp}/>\r\n            <input placeholder=\"drop off location\" aria-label=\"drop off\" onChange={props.handleDropOff}/>\r\n            <button onClick={props.addOrder}>add order</button>\r\n            <button onClick={props.updateList}>update order list</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction ProcessOrder(props) {\r\n    const [orderID, setOrderID] = useState(\"\");\r\n    const [order, setOrder] = useState({});\r\n    const [accepted, setAccepted] = useState(false);\r\n\r\n    const handleOrderID = (event) => {\r\n        setOrderID(event.target.value)\r\n    }\r\n\r\n    console.log(orderID);\r\n\r\n    const handleOrderDetail = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const response = await fetch(api.base + api.handlers.driver + api.handlers.accept + \"/\" + orderID, {\r\n            method: \"PATCH\",\r\n            headers: new Headers({\r\n                \"Authorization\": props.auth\r\n            })\r\n        });\r\n\r\n        if (response.status !== status.ok) {\r\n            const err = await response.text();\r\n            props.handleSetErr(err);\r\n        } else {\r\n            const orderInfo = response.json();\r\n            setOrder(orderInfo)\r\n            props.handleSetErr(\"\");\r\n            setAccepted(true);\r\n        }\r\n    }\r\n\r\n    const completeOrder = async (event) => {\r\n        event.preventDefault();\r\n        const response = await fetch(api.base + api.handlers.driver + api.handlers.complete + \"/\" + orderID, {\r\n            method: \"PATCH\",\r\n            headers: new Headers({\r\n                \"Authorization\": props.auth\r\n            })\r\n        });\r\n\r\n        if (response.status !== status.ok) {\r\n            const err = await response.text();\r\n            props.handleSetErr(err);\r\n        } else {\r\n            setAccepted(false);\r\n            props.handleSetErr(\"\");\r\n            props.updateList(event);\r\n        }\r\n    }\r\n\r\n    let completeOrderButton = <button onClick={handleOrderDetail}>accept order</button>\r\n    if (accepted) {\r\n        completeOrderButton = <button onClick={completeOrder}>complete order</button>\r\n    }\r\n\r\n    return (<>\r\n        <div>\r\n            <form>\r\n                <input aria-label=\"order id\" onChange={handleOrderID}></input>\r\n                {completeOrderButton}\r\n            </form>\r\n            <p>Order info</p>\r\n            <p>{order._id} {order.customerID} {Date(order.createdAt)} {order.driverID} {order.range} {order.price} {order.pickupLocation} {order.dropoffLocation}</p>\r\n        </div>\r\n    </>\r\n    );\r\n}","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\auth\\Auth.js",["65"],"import React, { useState } from 'react'\r\nimport api from '../constants/apiEndPoints'\r\nimport status from '../constants/statusCode'\r\nimport type from '../constants/userType'\r\n\r\n// const EXAMPLE_NEW_USER = {\r\n//     email: \"test3@test.com\",\r\n//     password: \"password\",\r\n//     passwordConf: \"password\",\r\n//     userName: \"hahaha\",\r\n//     firstName: \"firstlol\",\r\n//     lastName: \"lastlol\",\r\n//     type: \"customer\"\r\n// };\r\n\r\n// const EXAMPLE_LOGIN = {\r\n//     email: \"test3@test.com\",\r\n//     password: \"password\"\r\n// }\r\n\r\nexport default function Auth(props) {\r\n    return (\r\n        <>\r\n        <SignIn handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser} handleSetAuth={props.handleSetAuth}/>\r\n        <SignUp handleSetErr={props.handleSetErr} handleSetUser={props.handleSetUser} handleSetAuth={props.handleSetAuth}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function SignIn(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n        console.log(password);\r\n    }\r\n\r\n    const handleSignIn = async (event) => {\r\n        event.preventDefault();\r\n        let url = api.base + api.handlers.login;\r\n        let sendData = {\r\n            email: email,\r\n            password: password\r\n        };\r\n        //let sendData = EXAMPLE_LOGIN;\r\n        const response = await fetch(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n\r\n        if (response.status !== status.ok) {\r\n            const err = await response.text();\r\n            props.handleSetErr(err)\r\n        } else {\r\n            const authToken = response.headers.get(\"Authorization\")\r\n            localStorage.setItem(\"Authorization\", authToken);\r\n            props.handleSetAuth(authToken)\r\n            const user = await response.json();\r\n            props.handleSetUser(user)\r\n            props.handleSetErr(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>sign in</h2>\r\n            <form>\r\n                <input placeholder=\"email\" aria-label=\"email\" onChange={handleEmail}></input>\r\n                <input placeholder=\"password\" type=\"password\" aria-label=\"password\" onChange={handlePassword}></input>\r\n                <button onClick={handleSignIn}>sign in</button>\r\n            </form>\r\n        </> \r\n    );\r\n}\r\n\r\nexport function SignUp(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [userType, setUserType] = useState(\"\");\r\n\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const handleUserName = (event) => {\r\n        setUserName(event.target.value);\r\n    }\r\n\r\n    const handleFirstName = (event) => {\r\n        setFirstName(event.target.value);\r\n    }\r\n\r\n    const handleLastName = (event) => {\r\n        setLastName(event.target.value);\r\n    }\r\n\r\n    const handleUserType = (event) => {\r\n        setUserType(event.target.value);\r\n    }\r\n\r\n    const handleSignUp = async (event) => {\r\n        event.preventDefault();\r\n        let url = api.base + api.handlers.signUp;\r\n        let sendData = {\r\n            email: email,\r\n            password: password,\r\n            passwordConf: password,\r\n            userName: userName,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            type: userType\r\n        };\r\n        //let sendData = EXAMPLE_NEW_USER;\r\n        const response = await fetch(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(sendData),\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n        })\r\n\r\n        if (response.status !== status.created) {\r\n            const err = await response.text();\r\n            props.handleSetErr(err)\r\n        } else {\r\n            const authToken = response.headers.get(\"Authorization\")\r\n            localStorage.setItem(\"Authorization\", authToken);\r\n            props.handleSetAuth(authToken)\r\n            const user = await response.json()\r\n            props.handleSetUser(user)\r\n            props.handleSetErr(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>sign up</h2>\r\n        <form>\r\n            <input placeholder=\"email\" aria-label=\"email\" onChange={handleEmail}></input>\r\n            <input placeholder=\"password\" type=\"password\" aria-label=\"password\" onChange={handlePassword}></input>\r\n            <input placeholder=\"username\" aria-label=\"username\" onChange={handleUserName} />\r\n            <input placeholder=\"first name\" aria-label=\"first name\" onChange={handleFirstName} />\r\n            <input placeholder=\"last name\" aria-label=\"last name\" onChange={handleLastName} />\r\n            <input placeholder=\"usertype (customer or driver)\" aria-label=\"user type\" onChange={handleUserType} />\r\n            {/* <input type=\"radio\" id={type.customer} name=\"userType\" value={type.customer}>Customer</input>\r\n            <input type=\"radio\" id={type.driverr} name=\"userType\" value={type.driverr}>Driver</input> */}\r\n            <button onClick={handleSignUp}>sign up</button>\r\n        </form>\r\n        </>\r\n    )\r\n}","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\constants\\apiEndPoints.js",["66"],"export default {\r\n    base: \"https://api.serversideisfun.me/v1\",\r\n    testbase: \"https://localhost:4000\",\r\n    handlers: {\r\n        login: \"/login\",\r\n        signUp: \"/signup\",\r\n        customer: \"/customer\",\r\n        driver: \"/driver\",\r\n        order: \"/order\",\r\n        orderList: \"/orderList\",\r\n        accept: \"/accept\",\r\n        complete: \"/complete\",\r\n        earning: \"/earnings\",\r\n        available:\"/available\"\r\n    }\r\n}","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\constants\\statusCode.js",["67"],"export default {\r\n    ok: 200,\r\n    created: 201,\r\n    unauthorized: 401,\r\n    unsupportedMediaType: 415,\r\n    internalServerError: 500\r\n}","D:\\Khoa\\University\\INFO 441\\src\\SendIt\\client\\src\\constants\\userType.js",["68"],"export default {\r\n    customer: \"customer\",\r\n    driver: \"driver\"\r\n}",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":4,"column":9,"nodeType":"77","messageId":"78","endLine":4,"endColumn":22},{"ruleId":"75","severity":1,"message":"80","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":14},{"ruleId":"75","severity":1,"message":"81","line":13,"column":7,"nodeType":"77","messageId":"78","endLine":13,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":41,"column":6,"nodeType":"84","endLine":41,"endColumn":8,"suggestions":"85"},{"ruleId":"75","severity":1,"message":"86","line":40,"column":11,"nodeType":"77","messageId":"78","endLine":40,"endColumn":18},{"ruleId":"75","severity":1,"message":"87","line":40,"column":20,"nodeType":"77","messageId":"78","endLine":40,"endColumn":30},{"ruleId":"71","replacedBy":"88"},{"ruleId":"73","replacedBy":"89"},{"ruleId":"75","severity":1,"message":"90","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"82","severity":1,"message":"91","line":94,"column":8,"nodeType":"84","endLine":94,"endColumn":10,"suggestions":"92"},{"ruleId":"75","severity":1,"message":"93","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":1,"column":1,"nodeType":"96","endLine":16,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":1,"column":1,"nodeType":"96","endLine":7,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":1,"column":1,"nodeType":"96","endLine":4,"endColumn":2},{"ruleId":"71","replacedBy":"97"},{"ruleId":"73","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'status' is defined but never used.","'EXAMPLE_USER' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'newUser' is assigned a value but never used.","'setNewUser' is assigned a value but never used.",["99"],["100"],"'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["102"],"'type' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [auth]",{"range":"107","text":"108"},"Update the dependencies array to be: [props]",{"range":"109","text":"110"},[1135,1137],"[auth]",[3105,3107],"[props]"]